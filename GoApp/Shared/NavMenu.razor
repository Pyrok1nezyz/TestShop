@using GoApp.Pages
@using System.Reflection
@using System.Text.RegularExpressions

<li>
	<a class="dropdown-item dropdown-item-danger text-red d-flex gap-2 align-items-center">
		
		<a title="Navigation menu" class="dropdown-item-danger text-decoration-none text-red" href="/" @onclick="ToggleNavMenu" >
			<NavLink>Все товары</NavLink>
		</a>
	</a>
</li>


<div class="@NavMenuCssClass nav-scrollable" @onclick="ToggleNavMenu">
	<nav class="flex-column text-decoration-none">
		@foreach(var filename in GetRoutableComponentNamesForMenu())
		{
			<li>
				<a class="dropdown-item text-decoration-none dropdown-item-danger text-red d-flex gap-2 align-items-center" href="@filename">
					<NavLink>@filename</NavLink>
				</a>
			</li>
		}
		@* <li>
			<a class="dropdown-item text-decoration-none dropdown-item-danger text-red d-flex gap-2 align-items-center" href="#">
				<NavLink>Шапки</NavLink>
			</a>
		</li>
		<li>
			<a class="dropdown-item text-decoration-none dropdown-item-danger text-red d-flex gap-2 align-items-center" href="#">
				<NavLink>Ботинки</NavLink>
			</a>
		</li>
		<li><hr class="dropdown-divider"></li>
		<li>
			<a class="dropdown-item text-decoration-none dropdown-item-danger text-red d-flex gap-2 align-items-center" href="list">
				<NavLink>Скидки</NavLink>
			</a>
		</li> *@
	</nav>
</div>

@code {
	private bool collapseNavMenu = true;

	private string? NavMenuCssClass => collapseNavMenu ? "collapse" : null;

	private void ToggleNavMenu()
	{
		collapseNavMenu = !collapseNavMenu;
	}

	public IEnumerable<string> GetRoutableComponentNamesForMenu()
	{
		var allComponents = Assembly
			.GetExecutingAssembly()
			.ExportedTypes
			.Where(t => t.IsSubclassOf(typeof(ComponentBase)));

		var routableComponents = allComponents
			.Where(c => c
				.GetCustomAttributes(inherit: true)
				.OfType<RouteAttribute>()
				.Count() > 0);


		foreach (var routableComponent in routableComponents)
		{
			yield return routableComponent
				.ToString()
			// you need to adjust the following!
				.Replace("GoApp.Pages.", string.Empty);
		}
	}
}
