@using GoApp.Pages
@using System.Text.RegularExpressions
@using GoApp.Entitys
@inject NavigationManager Navigation
@inject IHttpClientFactory ClientFactory


<form class="p-2 mb-2 bg-body-tertiary border-bottom">
	<input type="search" class="form-control" value="@_categorySearchString" @oninput="Callback" autocomplete="false" placeholder="Поиск">
</form>
<li>
	<a class="dropdown-item dropdown-item-danger text-red d-flex gap-2 align-items-center">
		<a title="Navigation menu" class="dropdown-item-danger text-decoration-none text-red pt-0" href="/category?id=0&name=Все товары">
			<NavLink>Все товары</NavLink>
		</a>
	</a>
</li>
<div class="nav-scrollable">
	<nav class="flex-column text-decoration-none">
		@foreach(var category in _filteredCategories)
		{
			<li>
				<a class="dropdown-item text-decoration-none dropdown-item-danger text-red d-flex gap-2 align-items-center" href="/category?id=@category.Id&name=@category.Name">
					<NavLink>@category.Name</NavLink>
				</a>
			</li>
		}
	</nav>
</div>

@code {
	private List<Category> Categories;

	private List<Category> _filteredCategories;

	string _categorySearchString = "";

	protected override void OnInitialized()
	{
		var client = ClientFactory.CreateClient();
		var response = client.GetAsync("https://localhost:7273/categories").Result;

		if (response.IsSuccessStatusCode)
		{
			var content = response.Content.ReadFromJsonAsync<List<Category>>().Result;
			Categories = content;
			GetFilteredCategories("");
		}
		else
		{
			Navigation.NavigateTo("/Error", true);
		}
	}

	private void Callback(ChangeEventArgs args)
	{
		_categorySearchString = args.Value.ToString();
		GetFilteredCategories(_categorySearchString);
	}

	private void GetFilteredCategories(string query)
	{
		if (string.IsNullOrWhiteSpace(_categorySearchString))
		{
			_filteredCategories = Categories;
		}
		else
		{
			_filteredCategories = Categories.Where(e => e.Name.ToLower().Contains(_categorySearchString.ToLower())).ToList();
		}
	}
}
