@page "/category"
@using GoApp.Entitys
@using Microsoft.EntityFrameworkCore.SqlServer.Query.Internal
@using AspNetCore.BootstrapTagHelpers.Extensions
@inject IHttpClientFactory ClientFactory
@inject NavigationManager Navigation

<h2 class="pb-2 text-light border-bottom">@CategoryName</h2>

<div class="row row-cols-1 row-cols-lg-2 text-light align-items-stretch g-4" data-bs-theme="light">
	@for (int i = 0; i < Items.Count; i++)
	{
		@if (i % 2 != 1)
		{
			<div class="col">
				<div class="card card-cover h-100 overflow-hidden bg-dark text-bg-muted rounded-4 shadow-lg" height="5" type="image/png" style="background-image: url('@Items[i].ImageString'); background-size: cover;">
					<div class="d-flex flex-column h-100 p-5 pb-3 text-light text-shadow-1">
						<h3 class="pt-5 mt-5 mb-4 display-6 text-center lh-1 fw-bold">@Items[i].Name</h3>
						<ul class="d-flex list-unstyled mt-auto">
							<li class="rounded d-flex align-items-left mx-auto">
								<img src="https://advant-project.ru/pictures/product/middle/4484_middle.png" alt="Bootstrap" width="32" height="32" class="rounded-circle border border-white">
							</li>
							<li class="d-flex align-content-lg-center mx-auto">
								<small>от @Items[i].Price</small>
							</li>
							<li class="d-flex align-content-lg-center mx-auto">
								<small> ₽</small>
							</li>
						</ul>
					</div>
				</div>
			</div>
		}
		else
		{
			<div class="card card-cover h-100 overflow-hidden bg-dark text-bg-muted rounded-4 shadow-lg" height="5" type="image/png" style="background-image: url('@Items[i].ImageString'); background-size: cover;">
				<div class="d-flex flex-column h-100 p-5 pb-3 text-light text-shadow-1">
					<h3 class="pt-5 mt-5 mb-4 display-6 lh-1 fw-bold">@Items[i].Name</h3>
					<ul class="d-flex list-unstyled mt-auto">
						<li class="rounded d-flex align-items-left mx-auto">
							<img src="https://advant-project.ru/pictures/product/middle/4484_middle.png" alt="Bootstrap" width="32" height="32" class="rounded-circle border border-white">
						</li>
						<li class="d-flex align-content-lg-center mx-auto">
							<small>от @Items[i].Price</small>
						</li>
						<li class="d-flex align-content-lg-center mx-auto">
							<small> ₽</small>
						</li>
					</ul>
				</div>
			</div>
		}
	}
</div>
<nav aria-label="Page navigation">
	<ul class="pagination justify-content-center pt-5">
		@if (CurrentPage > 1)
		{
			<li class="page-item"><a class="page-link" href="/category?id=@CategoryId&name=@CategoryName&page=@CurrentPage-1" @onclick="GoToPreviousPage">Previous</a></li>
		}
		@for (int i = 1; i < CountOfPages; i++)
		{
			int n = i;
			<li class="page-item"><button href="/category?id=@CategoryId&name=@CategoryName&page=@n" @onclick="() => GoToPage(n)" class="page-link">@i</button></li>
		}
		@if (CurrentPage < CountOfPages - 1)
		{
			<li class="page-item"><a class="page-link" href="/category?id=@CategoryId&name=@CategoryName&page=@CurrentPage+1" @onclick="GoToNextPage">Next</a></li>
		}
	</ul>
</nav>

@code {

	[Parameter]
	[SupplyParameterFromQuery(Name = "id")]
	public int CategoryId { get; set; } = 0;

	[Parameter]
	[SupplyParameterFromQuery(Name = "name")]
	public string CategoryName { get; set; } = "Все товары";

	[Parameter]
	[SupplyParameterFromQuery(Name = "page")]
	public int CurrentPage { get; set; } = 0; 
	public int CountOfPages;
	public int CountItemsPerPage = 6;
	public int NavigationPage = 1;

	List<Item> Items;

	protected override void OnInitialized()
	{
		var client = ClientFactory.CreateClient();
		var response = client.GetAsync($"https://localhost:7273/categoryitems?Id={CategoryId}").Result;

		if (response.IsSuccessStatusCode)
		{
			var content = response.Content.ReadFromJsonAsync<List<Item>>().Result;
			CountOfPages = content.Count / CountItemsPerPage;

			if (CurrentPage * CountItemsPerPage > content.Count)
			{
				CurrentPage = 1;
			}

			Items = content.Skip((CurrentPage - 1) * CountItemsPerPage).Take(CountItemsPerPage).ToList();
		}
	}


	private void GoToPreviousPage()
	{
		Navigation.NavigateTo($"/category?id={CategoryId}&name={CategoryName}&page={CurrentPage - 1}", true);
	}


	private void GoToPage(int i)
	{
		Navigation.NavigateTo($"/category?id={CategoryId}&name={CategoryName}&page={i}", true);
	}

	private void GoToNextPage()
	{
		Navigation.NavigateTo($"/category?id={CategoryId}&name={CategoryName}&page={CurrentPage + 1}", true);
	}

}
